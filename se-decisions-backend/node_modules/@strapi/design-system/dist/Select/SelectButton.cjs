"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const u=require("react"),b=require("prop-types"),f=require("styled-components"),l=require("./constants.cjs"),t=require("../helpers/keyboardKeys.cjs"),r=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},K=r(u),a=r(b),h=r(f),S=h.default.button`
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  width: 100%;
  background: transparent;
  border: none;

  // The focus state is moved to the parent thanks to :focus-within
  &:focus {
    outline: none;
  }

  &[aria-disabled='true'] {
    cursor: not-allowed;
  }
`,o=u.forwardRef(({labelledBy:e,expanded:c,onTrigger:n,disabled:d,...i},y)=>{const p=s=>{if(!d)switch(s.key){case t.KeyboardKeys.DOWN:case t.KeyboardKeys.SPACE:case t.KeyboardKeys.ENTER:{s.preventDefault(),n(l.DownState.Keyboard);break}case t.KeyboardKeys.UP:{s.preventDefault(),n(l.UpState.Keyboard);break}}};return K.default.createElement(S,{ref:y,"aria-labelledby":e,"aria-haspopup":"listbox","aria-expanded":c,onKeyDown:p,"aria-disabled":d,type:"button",...i})});o.displayName="SelectButton";o.defaultProps={expanded:!1,disabled:!1};o.propTypes={disabled:a.default.bool,expanded:a.default.bool,labelledBy:a.default.string.isRequired,onTrigger:a.default.func.isRequired};exports.SelectButton=o;
