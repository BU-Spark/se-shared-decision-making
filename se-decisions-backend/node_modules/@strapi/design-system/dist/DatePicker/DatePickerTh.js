import e from "react";
import i from "prop-types";
import r from "styled-components";
import { Flex as n } from "../Flex/Flex.js";
import "react/jsx-runtime";
import "../RawTable/RawTableContext.js";
import { RawTh as a } from "../RawTable/RawCell.js";
import "../Box/Box.js";
import { Typography as m } from "../Typography/Typography.js";
import { VisuallyHidden as p } from "../VisuallyHidden/VisuallyHidden.js";
const l = r(a)`
  // Trick to prevent the outline from overflowing because of the general outline-offset
  outline-offset: -2px;
  border-radius: ${({ theme: t }) => t.borderRadius};
  text-transform: capitalize;
`, s = r(n)`
  height: ${24 / 16}rem;
  width: ${32 / 16}rem;
`, f = ({ children: t, ...o }) => /* @__PURE__ */ e.createElement(l, { ...o }, /* @__PURE__ */ e.createElement(s, { justifyContent: "center" }, /* @__PURE__ */ e.createElement(m, { variant: "pi", fontWeight: "bold", color: "neutral800", "aria-hidden": !0 }, t.substr(0, 2)), /* @__PURE__ */ e.createElement(p, null, /* @__PURE__ */ e.createElement("span", null, t))));
f.propTypes = {
  children: i.string.isRequired
};
export {
  f as DatePickerTh
};
