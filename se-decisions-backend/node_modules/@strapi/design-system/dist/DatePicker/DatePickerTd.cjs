"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const d=require("react"),p=require("prop-types"),f=require("styled-components");require("react/jsx-runtime");require("../RawTable/RawTableContext.cjs");const y=require("../RawTable/RawCell.cjs");require("../Box/Box.cjs");const i=require("../Typography/Typography.cjs"),n=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},l=n(d),t=n(p),b=n(f),T=b.default.button`
  border: none;
  background: ${({theme:e,isSelected:r})=>r?e.colors.primary100:e.colors.neutral0};
  height: ${32/16}rem;
  text-align: center;
  width: ${32/16}rem;
  border-radius: ${({theme:e})=>e.borderRadius};

  // Trick to prevent the outline from overflowing because of the general outline-offset
  outline-offset: -2px;

  &:hover {
    background: ${({theme:e})=>e.colors.primary100};
  }

  &:hover > ${i.Typography} {
    color: ${({theme:e})=>e.colors.primary600};
  }
`,u=({children:e,outsideMonth:r,onSelectDay:s,isSelected:o,...c})=>{let a="neutral900";return o?a="primary600":r&&(a="neutral600"),l.default.createElement(y.RawTd,{...c},l.default.createElement(T,{tabIndex:-1,onClick:s,isSelected:o,type:"button"},l.default.createElement(i.Typography,{variant:"pi",textColor:a,fontWeight:o?"bold":null},e)))};u.defaultProps={isSelected:!1,outsideMonth:!1};u.propTypes={children:t.default.node.isRequired,isSelected:t.default.bool,onSelectDay:t.default.func.isRequired,outsideMonth:t.default.bool};exports.DatePickerTd=u;
