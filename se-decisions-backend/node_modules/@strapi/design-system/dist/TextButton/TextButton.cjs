"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const n=require("react/jsx-runtime"),x=require("react"),g=require("@strapi/icons"),c=require("styled-components"),l=require("../Box/Box.cjs"),m=require("../Flex/Flex.cjs"),j=require("../themes/utils.cjs"),h=require("../Typography/Typography.cjs"),b=e=>e&&typeof e=="object"&&"default"in e?e:{default:e};function T(e){if(e&&e.__esModule)return e;const r=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const t in e)if(t!=="default"){const o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:()=>e[t]})}}return r.default=e,Object.freeze(r)}const _=T(x),u=b(c),v=c.keyframes`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
`,B=u.default.div`
  animation: ${v} 2s infinite linear;
  will-change: transform;
`,q=u.default(m.Flex)`
  background: transparent;
  border: none;

  &[aria-disabled='true'] {
    pointer-events: none;
    svg path {
      fill: ${({theme:e})=>e.colors.neutral600};
    }
  }

  svg {
    display: flex;
    font-size: ${10/16}rem;
  }

  svg path {
    fill: ${({theme:e})=>e.colors.primary600};
  }

  ${j.buttonFocusStyle}
`,d=_.forwardRef(({children:e,startIcon:r,endIcon:t,onClick:o,disabled:s=!1,loading:a=!1,...p},f)=>{const y=o&&!s?o:void 0,i=s||a;return n.jsxs(q,{ref:f,"aria-disabled":i,onClick:y,as:"button",type:"button",...p,children:[(r||a)&&n.jsx(l.Box,{as:"span",paddingRight:2,"aria-hidden":!0,children:a?n.jsx(B,{children:n.jsx(g.Loader,{})}):r}),n.jsx(h.Typography,{variant:"pi",textColor:i?"neutral600":"primary600",children:e}),t&&n.jsx(l.Box,{as:"span",paddingLeft:2,"aria-hidden":!0,children:t})]})});d.displayName="TextButton";exports.TextButton=d;
